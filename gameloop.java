package ufo;
import java.applet.Applet;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;

public class gameloop extends Applet implements Runnable,KeyListener{

	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1665802472460830767L;
	public int x,y,x1,y1,x2,y2,x3,y3,ox1,oy1,ox2,oy2,ox3,oy3;
	public int ox4,oy4,ox5,oy5,ox6,oy6;
	public Image offscreen;
	public Graphics d;
	public int flag1=0, flag2=0, flag3=0,flagp1=0,flagp2=0,flagp3=0,flagp4=0,flagp5=0,flagp6=0;
	public boolean up, down , left , right;
	public int flags1=1,flags2=1,flags3=1,flagsp=0,flagl=0,flagr=0;
	public BufferedImage background,c,b,b1,b2,cl,cr,oc,hero;
	public int r;
	public int score=0;
	public int mainflag = 0,mainflag2=1;
	public int count = 0,count1=0,count2=0,count3=0,c1=0,c2=0,c3=0;
	Random rangen=new Random();
	public void run() {
		x=500;
		y=500;
		ox1=0;
		ox2=0;
		ox3=0;
		ox4=1300;
		ox5=1300;
		ox6=1300;
		oy1=rangen.nextInt(640);
		oy2=rangen.nextInt(640);
		oy3=rangen.nextInt(640);
		oy4=rangen.nextInt(640);
		oy5=rangen.nextInt(640);
		oy6=rangen.nextInt(640);
		y1=0;
		y2=0;
		y3=0;
		x1=rangen.nextInt(1300);
		x2=rangen.nextInt(1300);
		x3=rangen.nextInt(1300);
		try
		{
			background = ImageIO.read(new File("back.png"));
			c = ImageIO.read(new File("hi.png"));
			b= ImageIO.read(new File("hi2.png"));
			b1= ImageIO.read(new File("back.png"));
			b2= ImageIO.read(new File("back.png"));
			oc= ImageIO.read(new File("hi3.png"));
			cl = ImageIO.read(new File("left.png"));
			cr = ImageIO.read(new File("right.png"));
			hero=c;
		}catch(IOException e)
		{
			e.printStackTrace();
		}
		while(true)
		{	
			if(mainflag==0)
			{
				repaint();
				try
				{
					Thread.sleep(2);
				}catch(InterruptedException e){
					e.printStackTrace();
				}
			}
			else
			{
			count++;
		if(c1==0)
		{
			if(count==40)
			{
				count1+=5;
			}
		}
		else if(c2==0)
		{
			if(count==80)
			{
				count2+=3;
			}
			
		}
		else if(c3==0)
		{
			if(count==150)
			{
				count3+=1;
			}
		}
			else
		{
			count1++;
			count2++;
			count3++;
		}
			if(y1==620)
			{
				x1=rangen.nextInt(1300);
				y1=0;
				flag1=1;
				flags1=1;
			}
			if(y2==620)
			{
				x2=rangen.nextInt(1300);
				y2=0;
				flag2=1;
				flags2=1;
			}
			if(y3==620)
			{
				x3=rangen.nextInt(1300);
				y3=0;
				flag3=1;
				flags3=1;
			}
			if(ox1==1300)
			{
				oy1=rangen.nextInt(620);
				ox1=0;
				flagp1=1;
			}
			if(ox2==1300)
			{
				oy2=rangen.nextInt(620);
				ox2=0;
				flagp2=1;
			}
			if(ox3==1300)
			{
				oy3=rangen.nextInt(620);
				ox3=0;
				flagp3=1;
			}
			if(ox4==0)
			{
				oy4=rangen.nextInt(620);
				ox4=1300;
				flagp4=1;
			}
			if(ox5==0)
			{
				oy5=rangen.nextInt(620);
				ox5=1300;
				flagp5=1;
			}
			if(ox6==0)
			{
				oy6=rangen.nextInt(620);
				ox6=1300;
				flagp6=1;
			}
			if(left==true)
			{
				if(x>=0)
				x--;
			}
			if(right==true)
			{
				if(x<=1150)
				x++;
			}
			if(up==true)
			{
				if(y>=0)
				y--;
			}
			if(down==true)
			{
				if(y<=550)
				y++;
			}
			if(count1==5)
			{	c1=1;
				y1++;
				ox1++;
				ox5--;
				count1=0;
			}
			if(count2==3)
			{
				c2=1;
				y2++;
				ox2++;
				ox3++;
				ox6--;
				count2=0;
			}
			if(count3==1)
			{
				c3=1;
				y3++;
				ox4--;
				count3=0;
			}
			if(((x+75)>=x1)&&((x+75)<=(x1+60))&&((y+45)>=y1)&&((y+45)<=y1+60))
			{
				if(flagsp==0)
				{
					if(flags1==1)
					{
						flags1=0;
						score++;
					}
				}
				flag1=0;
			}
			if((x+75>=x2)&&(x+75<=(x2+60))&&((y+45)>=y2)&&((y+45)<=y2+60))
			{
				if(flagsp==0)
				{
					if(flags2==1)
					{
						flags2=0;
						score++;
					}
				}
				flag2=0;
			}
			if((x+75>=x3)&&(x+75<=(x3+60))&&((y+45)>=y3)&&((y+45)<=y3+60))
			{
				if(flagsp==0)
				{
					if(flags3==1)
					{
						flags3=0;
						score++;
					}
				}
				flag3=0;
			}
			if(((x)>=x1)&&((x)<=(x1+60))&&((y+45)>=y1)&&((y+45)<=y1+60))
			{
				if(flagsp==0)
				{
					if(flags1==1)
					{
						flags1=0;
						score++;
					}
				}
				flag1=0;
			}
			if((x>=x2)&&(x<=(x2+60))&&((y+45)>=y2)&&((y+45)<=y2+60))
			{
				if(flagsp==0)
				{
					if(flags2==1)
					{
						flags2=0;
						score++;
					}
				}
				flag2=0;
			}
			if((x>=x3)&&(x<=(x3+60))&&((y+45)>=y3)&&((y+45)<=y3+60))
			{
				if(flagsp==0)
				{
					if(flags3==1)
					{
						flags3=0;
						score++;
					}
				}
				flag3=0;
			}
			if(((x+150)>=x1)&&((x+150)<=(x1+60))&&((y+45)>=y1)&&((y+45)<=y1+60))
			{
				if(flagsp==0)
				{
					if(flags1==1)
					{
						flags1=0;
						score++;
					}
				}
				flag1=0;
			}
			if((x+150>=x2)&&(x+150<=(x2+60))&&((y+45)>=y2)&&((y+45)<=y2+60))
			{
				if(flagsp==0)
				{
					if(flags2==1)
					{
						flags2=0;
						score++;
					}
				}
				flag2=0;
			}
			if((x+150>=x3)&&(x+150)<=(x3+60)&&((y+45)>=y3)&&((y+45)<=y3+60))
			{
				if(flagsp==0)
				{
					if(flags3==1)
					{
						flags3=0;
						score++;
					}
				}
				flag3=0;
			}
			if(((x+75)>=x1)&&((x+75)<=(x1+60))&&((y)>=y1)&&((y)<=y1+60))
			{
				if(flagsp==0)
				{
					if(flags1==1)
					{
						flags1=0;
						score++;
					}
				}
				flag1=0;
			}
			if((x+75>=x2)&&((x+75)<=(x2+60))&&(y>=y2)&&(y<=y2+60))
			{
				if(flagsp==0)
				{
					if(flags2==1)
					{
						flags2=0;
						score++;
					}
				}
				flag2=0;
			}
			if((x+75>=x3)&&((x+75)<=(x3+60))&&(y>=y3)&&(y<=y3+60))
			{
				if(flagsp==0)
				{
					if(flags3==1)
					{
						flags3=0;
						score++;
					}
				}
				flag3=0;
			}
			if(((x+75)>=x1)&&((x+75)<=(x1+60))&&((y+90)>=y1)&&((y+90)<=y1+60))
			{
				if(flagsp==0)
				{
					if(flags1==1)
					{
						flags1=0;
						score++;
					}
				}
				flag1=0;
			}
			if((x+75>=x2)&&((x+75)<=(x2+60))&&((y+90)>=y2)&&((y+90)<=y2+60))
			{
				if(flagsp==0)
				{
					if(flags2==1)
					{
						flags2=0;
						score++;
					}
				}
				flag2=0;
			}
			if((x+75>=x3)&&((x+75)<=(x3+60))&&((y+90)>=y3)&&((y+90)<=y3+60))
			{
				if(flagsp==0)
				{
					if(flags3==1)
					{
						flags3=0;
						score++;
					}
				}
				flag3=0;
			}
			if(((x+75)>=ox1)&&((x+75)<=(ox1+100))&&((y+90)>=oy1)&&((y+90)<=oy1+60))
			{
				mainflag2=0;
				flagsp=1;
			}
			if((x+75>=ox2)&&((x+75)<=(ox2+100))&&((y+90)>=oy2)&&((y+90)<=oy2+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox3)&&((x+75)<=(ox3+100))&&((y+90)>=oy3)&&((y+90)<=oy3+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if(((x+75)>=ox4)&&((x+75)<=(ox4+100))&&((y+90)>=oy4)&&((y+90)<=oy4+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox5)&&((x+75)<=(ox5+100))&&((y+90)>=oy5)&&((y+90)<=oy5+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox6)&&((x+75)<=(ox6+100))&&((y+90)>=oy6)&&((y+90)<=oy6+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if(((x+75)>=ox1)&&((x+75)<=(ox1+100))&&((y)>=oy1)&&((y)<=oy1+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox2)&&((x+75)<=(ox2+100))&&(y>=oy2)&&(y<=oy2+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox3)&&((x+75)<=(ox3+100))&&(y>=oy3)&&(y<=oy3+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if(((x+75)>=ox4)&&((x+75)<=(ox4+100))&&((y)>=oy4)&&((y)<=oy4+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox5)&&((x+75)<=(ox5+100))&&(y>=oy5)&&(y<=oy5+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox6)&&((x+75)<=(ox6+100))&&(y>=oy6)&&(y<=oy6+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if(((x+150)>=ox1)&&((x+150)<=(ox1+100))&&((y+45)>=oy1)&&((y+45)<=oy1+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+150>=ox2)&&(x+150<=(ox2+100))&&((y+45)>=oy2)&&((y+45)<=oy2+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+150>=ox3)&&(x+150<=(ox3+100))&&((y+45)>=oy3)&&((y+45)<=oy3+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+150>=ox4)&&(x+150<=(ox4+100))&&((y+45)>=oy4)&&((y+45)<=oy4+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+150>=ox5)&&(x+150<=(ox5+100))&&((y+45)>=oy5)&&((y+45)<=oy5+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+150>=ox6)&&(x+150<=(ox6+100))&&((y+45)>=oy6)&&((y+45)<=oy6+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if(((x)>=ox1)&&((x)<=(ox1+100))&&((y+45)>=oy1)&&((y+45)<=oy1+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x>=ox2)&&(x<=(ox2+100))&&((y+45)>=oy2)&&((y+45)<=oy2+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x>=ox3)&&(x<=(ox3+100))&&((y+45)>=oy3)&&((y+45)<=oy3+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x>=ox4)&&(x<=(ox4+100))&&((y+45)>=oy4)&&((y+45)<=oy4+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x>=ox5)&&(x<=(ox5+100))&&((y+45)>=oy5)&&((y+45)<=oy5+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x>=ox6)&&(x<=(ox6+100))&&((y+45)>=oy6)&&((y+45)<=oy6+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if(((x+75)>=ox1)&&((x+75)<=(ox1+100))&&((y+45)>=oy1)&&((y+45)<=oy1+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox2)&&(x+75<=(ox2+100))&&((y+45)>=oy2)&&((y+45)<=oy2+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox3)&&(x+75<=(ox3+100))&&((y+45)>=oy3)&&((y+45)<=oy3+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox4)&&(x+75<=(ox4+100))&&((y+45)>=oy4)&&((y+45)<=oy4+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox5)&&(x+75<=(ox5+100))&&((y+45)>=oy5)&&((y+45)<=oy5+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			if((x+75>=ox6)&&(x+75<=(ox6+100))&&((y+45)>=oy6)&&((y+45)<=oy6+60))
			{
				flagsp=1;
				mainflag2=0;
			}
			repaint();
			try
			{
				Thread.sleep(2);
			}catch(InterruptedException e){
				e.printStackTrace();
			}
		}
		}
		
	}

	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode()==37)
		{
			hero=cl;
			flagl=1;
			left=true;
		}
		if(e.getKeyCode()==38)
		{
			up=true;
		}
		if(e.getKeyCode()==39)
		{
			flagr=1;
			hero=cr;
			right=true;
		}
		if(e.getKeyCode()==40)
		{
			down=true;
		}
		if(e.getKeyCode()==KeyEvent.VK_ENTER)
		{
			mainflag=1;
		}

		
	}

	public void keyReleased(KeyEvent e) 
	{
		if(e.getKeyCode()==37)
		{
			flagl=0;
			hero=c;
			left=false;
		}
		if(e.getKeyCode()==38)
		{
			up=false;
		}
		if(e.getKeyCode()==39)
		{
			flagr=0;
			hero=c;
			right=false;
		}
		if(e.getKeyCode()==40)
		{
			down=false;
		}
	}

	public void keyTyped(KeyEvent e) {}

}
